# -*- coding: utf-8 -*-
"""WEAPONS Dataset

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AF7PV2c4-RBlyPoH1DI3RvIZYT5ysv4V
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
df=pd.read_csv("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/7_OneCatOneNum.csv")
df.head()

# Lollipop
fig, (ax1) = plt.subplots(1)
ordered_df = df.sort_values(by='Value',ascending=True).reset_index(drop=True)
sns.scatterplot(x=df["Value"],y=df["Country"],s=150,alpha=1,label="Average",color="skyblue",edgecolors="white",)
sns.scatterplot(x=df["Value"],y=df["Country"],s=150,alpha=1,label="Min/Max",color="blue",edgecolors="white",)
sns.scatterplot(x=df["Value"],y=df["Country"],s=150,alpha=1,color="skyblue",edgecolors="white",)
ax1.hlines(y=df["Country"],xmin=df["Value"],xmax=df["Value"],color="grey",alpha=0.4,lw=4,zorder=0, )
plt.show()

# Barplot
sns.barplot(data=df, x="Value", y="Country")

# Circular barplot
df = df.sort_values(by=['Value'])
plt.figure(figsize=(200,100))
ax = plt.subplot(111, polar=True)
plt.axis('off')

upperLimit = 1000
lowerLimit = 30
labelPadding = 4
max = df['Value'].max()

slope = (max - lowerLimit) / max
heights = slope * df.Value + lowerLimit
width = 2*np.pi / len(df.index)
indexes = list(range(1, len(df.index)+1))
angles = [element * width for element in indexes]
angles
bars = ax.bar(
x=angles,height=heights, width=width,bottom=lowerLimit,linewidth=2, edgecolor="white",color="#61a4b2",)

for bar,angle,height,label in zip(bars,angles, heights, df["Country"]):
    rotation = np.rad2deg(angle)
    alignment = ""
    if angle >= np.pi/2 and angle < 3*np.pi/2:
        alignment = "right"
        rotation = rotation + 180
    else: 
        alignment = "left"
    ax.text(x=angle, y=lowerLimit + bar.get_height() + labelPadding, s=label, ha=alignment, va='center', rotation=rotation, rotation_mode="anchor") 
    plt.show()

# Treemap
!pip install squarify
import squarify
squarify.plot(sizes=df['Value'].values,label=df['Country'],alpha=.8)
plt.axis('off')
plt.show()

# Circle packing
import circlify
g = circlify.circlify(df['Value'].tolist(), show_enclosure=False, target_enclosure=circlify.Circle(x=0, y=0, r=1))
fig, ax = plt.subplots(figsize=(10,10))
limit = max(
    max(abs(g.x) + g.r,abs(g.y) + g.r,)
    for i in g
)
plt.xlim(-limit, limit)
plt.ylim(-limit, limit)
labels = df['Country']

for i, label in zip(g, labels):
    x, y, r = i
    ax.add_patch(plt.Circle((x, y), r, alpha=0.2, linewidth=2))
    plt.annotate(label, (x,y ) ,va='center',ha='center')